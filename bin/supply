#!/bin/bash
set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
DEPS_DIR=$3
DEPS_IDX=$4

# START OPENDJDK
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

APT_OPTIONS="-o debug::nolocking=true -o Dir::Cache=$APT_CACHE_DIR -o Dir::State=$APT_STATE_DIR"

echo "Updating apt caches"
apt-get $APT_OPTIONS update

if [ $(ls -1 $APT_CACHE_DIR/archives/openjdk-7-jdk*.deb | wc -l) -lt 1 ]
then
  apt-get $APT_OPTIONS -y -d install openjdk-7-jdk
fi
JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64/

mkdir -p $BUILD_DIR/.apt

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  echo "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

BUILD_JAVA_HOME="$BUILD_DIR/.apt$JAVA_HOME"

echo "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
export PATH="\$HOME/.apt$JAVA_HOME/bin:\$PATH"
export JAVA_HOME="\$HOME/.apt$JAVA_HOME"
mkdir -p $BUILD_JAVA_HOME/jre/lib/amd64/
# symlink needed because node-java is compiled with jvm in temporary path
ln -s "\$JAVA_HOME/jre/lib/amd64/server" $BUILD_JAVA_HOME/jre/lib/amd64/server
EOF

export PATH="$BUILD_DIR/.apt/usr/bin:$PATH"
export JAVA_HOME=$BUILD_JAVA_HOME
# END OPENDJDK

export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`
source "$BUILDPACK_DIR/scripts/install_go.sh"
output_dir=$(mktemp -d -t supplyXXX)

echo "-----> Running go build supply"
GOROOT=$GoInstallDir/go GOPATH=$BUILDPACK_DIR $GoInstallDir/go/bin/go build -o $output_dir/supply nodejs/supply/cli

$output_dir/supply "$BUILD_DIR" "$CACHE_DIR" "$DEPS_DIR" "$DEPS_IDX"
